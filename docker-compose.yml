version: '3.8'

# Docker Compose configuration for Spring Boot Microservices
# This file orchestrates three microservices:
# 1. accounts - Dockerized using traditional Dockerfile
# 2. loans - Dockerized using Spring Boot Buildpacks
# 3. cards - Dockerized using Google Jib
#
# Usage:
# - Build all services: docker-compose build
# - Start all services: docker-compose up -d
# - View logs: docker-compose logs -f
# - Stop all services: docker-compose down
# - Stop and remove volumes: docker-compose down -v

services:
  # Accounts Service - Core banking account management
  # Dockerized using traditional Dockerfile approach
  accounts:
    build:
      context: accounts
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_APPLICATION_NAME=accounts
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=optional:configserver:http://configserver:8071
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - microservices-network
    container_name: accounts-service
    hostname: accounts-service
    restart: unless-stopped
    volumes:
      - accounts-data:/app/data

  # Loans Service - Manages loan products and applications
  # Dockerized using Spring Boot Buildpacks
  loans:
    # Using Spring Boot Buildpacks (no explicit Dockerfile needed)
    # The Spring Boot Maven plugin will create the image
    image: nazjara/loans:1.0.0-SNAPSHOT
    ports:
      - "8082:8082"
    environment:
      - SPRING_APPLICATION_NAME=loans
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=optional:configserver:http://configserver:8071
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - microservices-network
    container_name: loans-service
    hostname: loans-service
    restart: unless-stopped
    volumes:
      - loans-data:/app/data

  # Cards Service - Manages credit and debit card products
  # Dockerized using Google Jib
  cards:
    # Using Google Jib for containerization
    # The image is built during the Maven build process
    image: nazjara/cards:1.0.0-SNAPSHOT
    ports:
      - "8081:8081"
    environment:
      - SPRING_APPLICATION_NAME=cards
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CONFIG_IMPORT=optional:configserver:http://configserver:8071
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      configserver:
        condition: service_healthy
    networks:
      - microservices-network
    container_name: cards-service
    hostname: cards-service
    restart: unless-stopped
    volumes:
      - cards-data:/app/data

  # Config Server - Centralized configuration management
  configserver:
    image: nazjara/configserver:1.0.0-SNAPSHOT
    ports:
      - "8071:8071"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_RABBITMQ_HOST=rabbitmq
    networks:
      - microservices-network
    container_name: config-server
    hostname: config-server
    restart: unless-stopped
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - configserver-data:/app/data
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

  # RabbitMQ - Message broker for Spring Cloud Bus
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # RabbitMQ standard port
      - "15672:15672"  # RabbitMQ management port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - microservices-network
    container_name: rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s

networks:
  microservices-network:
    driver: bridge

volumes:
  accounts-data:
  configserver-data:
  rabbitmq-data:
  loans-data:
  cards-data:
